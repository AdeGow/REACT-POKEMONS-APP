{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","arguments","length","undefined","Date","concat","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","_ref","pokemon","_ref$borderColor","borderColor","_useState","useState","_useState2","_slicedToArray","setColor","history","useHistory","_jsx","className","onClick","id","push","onMouseEnter","onMouseLeave","children","_jsxs","style","src","picture","alt","name","created","types","map","POKEMONS","hp","cp","PokemonService","_classCallCheck","_createClass","key","value","_this","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","_this2","data","isEmpty","find","_this3","method","body","JSON","stringify","headers","index","findIndex","_this4","filter","_this5","term","_this6","includes","Object","keys","console","process","PokemonSearch","setTerm","_useState3","_useState4","setPokemons","placeholder","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","right","bottom","Loader","PokemonDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","_defineProperty","_objectSpread","isAddForm","isTypesValid","handleSubmit","preventDefault","newForm","startsWith","endsWith","test","validateForm","updatePokemon","addPokemon","onSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","currentType","selectType","PokemonEdit","Pokemon","AddPokemon","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","render","props","Redirect","pathname","App","Router","Switch","exact","path","PokemonAdd","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d990c9f9.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n  return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n}\n\nexport default formatDate;\n","const formatType = (type: string): string => {\n  let color: string;\n\n  switch (type) {\n    case 'Feu':\n      color = 'red lighten-1';\n      break;\n    case 'Eau':\n      color = 'blue lighten-1';\n      break;\n    case 'Plante':\n      color = 'green lighten-1';\n      break;\n    case 'Insecte':\n      color = 'brown lighten-1';\n      break;\n    case 'Normal':\n      color = 'grey lighten-3';\n      break;\n    case 'Vol':\n      color = 'blue lighten-3';\n      break;\n    case 'Poison':\n      color = 'deep-purple accent-1';\n      break;\n    case 'Fée':\n      color = 'pink lighten-4';\n      break;\n    case 'Psy':\n      color = 'deep-purple darken-2';\n      break;\n    case 'Electrik':\n      color = 'lime accent-1';\n      break;\n    case 'Combat':\n      color = 'deep-orange';\n      break;\n    default:\n      color = 'grey';\n      break;\n  }\n\nreturn `chip ${color}`;\n}\n\nexport default formatType;\n","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n  pokemon: Pokemon,\n  borderColor?: string\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n\n  const [color, setColor] = useState<string>();\n\n  const history = useHistory();\n\n  const showBorder = () => {\n    setColor(borderColor);\n  }\n\n  const hideBorder = () => {\n    setColor('#F5F5F5');\n  }\n\n  const goToPokemon = (id: number) => {\n    history.push(`pokemons/${id}`);\n  }\n\n  return (\n    <div className=\"col s6 m4\" onClick={() => (goToPokemon(pokemon.id))} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\">\n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n            {pokemon.types.map(type => (\n              <span key={type} className={formatType(type)}>{type}</span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonCard;\n","import Pokemon from './pokemon';\n\nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n\nexport default POKEMONS;\n","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    delete pokemon.created;\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n\nconst PokemonSearch: FunctionComponent = () => {\n\n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n\n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n\n  return (\n    <div className=\"row\">\n    <div className=\"col s12 m6 offset-m3\">\n      <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"input-field\">\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} />\n        </div>\n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div>\n      </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default PokemonSearch;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from \"react-router-dom\";\nimport PokemonSearch from '../components/pokemon-search';\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  useEffect(() => {\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h1 className=\"center\">Pokédex</h1>\n        <div className=\"container\">\n          <div className=\"row\">\n          <PokemonSearch />\n          {pokemons.map(pokemon => (\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\n          ))}\n          </div>\n        </div>\n          <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\n          style={ {position: \"fixed\", right:\"25px\", bottom:\"25px\"} }\n          to=\"/pokemons/add\"\n          >\n            <i className=\"material-icons\">add</i>\n          </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonList;\n","import React, { FunctionComponent } from 'react';\n\nconst Loader: FunctionComponent = () => {\n\n  return (\n    <div className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div><div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n   </div>\n  );\n}\n\nexport default Loader;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n\ntype Params = { id: string };\n\nconst PokemonDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n\n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\">\n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr>\n                        <td>Nom</td>\n                        <td><strong>{ pokemon.name }</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Points de vie</td>\n                        <td><strong>{ pokemon.hp }</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Dégâts</td>\n                        <td><strong>{ pokemon.cp }</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Types</td>\n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td>\n                      </tr>\n                      <tr>\n                        <td>Date de création</td>\n                        <td>{formatDate(pokemon.created)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonDetail;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound: FunctionComponent = () => {\n\n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1>\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n\ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field = {\n  value?: any,\n  error?:string,\n  isValid?: boolean\n}\n\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true }\n  });\n\n  const history = useHistory();\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = {[fieldName]: { value: fieldValue }};\n\n    setForm({...form, ...newField});\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>) :void => {\n\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // si l'utilisateur coche une case, on l'ajoute à la liste des types du pokemon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // si l'utlisateur décoche la case, on le retire de la liste des types du pokemon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n  const isAddForm = () => {\n    return !isEditForm;\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator picture\n    if(isAddForm()){\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = \"L'url n'est pas valide\";\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = {...form, ...{ picture: newField }}\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = {...form, ...{ picture: newField}}\n      }\n    }\n\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n  const isTypesValid = (type: string): boolean => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true',\n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if(isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  }\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'));\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push('/pokemons'));\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            {isEditForm && (\n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"picture\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                  {form.picture.error &&\n                  <div className=\"card-panel red accent-1\">\n                    { form.picture.error }\n                  </div>\n                  }\n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error &&\n                  <div className=\"card-panel red accent-1\">\n                    { form.name.error }\n                  </div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error &&\n                  <div className=\"card-panel red accent-1\">\n                    { form.hp.error }\n                  </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error &&\n                  <div className=\"card-panel red accent-1\">\n                    { form.cp.error }\n                  </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PokemonForm;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n\ntype Params = { id: string };\n\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n\n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonEdit;\n","export default class Pokemon {\n  // 1. Typage des propiétés d'un pokémon.\n  id: number;\n  hp: number;\n  cp: number;\n  name: string;\n  picture: string;\n  types: Array<string>;\n  created: Date;\n\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n  constructor(\n   id: number,\n   hp: number = 100,\n   cp: number = 10,\n   name: string = '...',\n   picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/xxx.png',\n   types: Array<string> = ['Normal'],\n   created: Date = new Date()\n  ) {\n   // 3. Initialisation des propiétés d'un pokémons.\n   this.id = id;\n   this.hp = hp;\n   this.cp = cp;\n   this.name = name;\n   this.picture = picture;\n   this.types = types;\n   this.created = created;\n  }\n }\n","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\nconst AddPokemon: FunctionComponent = () => {\n  const [id] = useState<number>(new Date().getTime());\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n  return (\n    <div>\n      <div className=\"row\">\n          <h2 className=\"header center\">Ajouter un pokémon</h2>\n          <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n      </div>\n    </div>\n  );\n}\n\nexport default AddPokemon;\n","export default class AuthenticationService {\n\n  static isAuthenticated:boolean = false;\n\n  static login(username: string, password: string): Promise<boolean> {\n    const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.isAuthenticated = isAuthenticated;\n        resolve(isAuthenticated);\n      }, 1000);\n    });\n  }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n\n        history.push('/pokemons');\n\n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\">\n                   {form.username.error}\n                  </div>}\n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\">\n                   {form.password.error}\n                  </div>}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {\n      return <Redirect to={{ pathname: '/login' }} />\n    }\n\n    return <Component {...props} />\n  }} />\n);\n\nexport default PrivateRoute;\n","import React, { FunctionComponent } from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PokemonDetail from './pages/pokemon-detail';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n\nconst App: FunctionComponent = () => {\n\n  return (\n    <Router>\n      <div>\n        {/* La barre de navigation commune à toutes les pages */}\n        <nav>\n          <div className=\"nav-wrapper teal\">\n            <Link to=\"/pokemons\" className=\"btand-logo center\">Pokédex</Link>\n          </div>\n        </nav>\n        {/* Le système de gestion des routes de notre application */}\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={PokemonList} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\n          <PrivateRoute exact path=\"/pokemons/add\" component={PokemonAdd} />\n          <PrivateRoute exact path='/pokemons/edit/:id' component={PokemonEdit} />\n          <PrivateRoute path=\"/pokemons/:id\" component={PokemonDetail} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  < App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}